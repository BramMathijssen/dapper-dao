{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_name",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_name",
          "type": "bytes32"
        },
        {
          "internalType": "enum DAO.Role",
          "name": "_role",
          "type": "uint8"
        }
      ],
      "name": "addMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "enum DAO.Duration",
          "name": "_duration",
          "type": "uint8"
        }
      ],
      "name": "createProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "members",
      "outputs": [
        {
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "name",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "memberSince",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint32",
          "name": "startDate",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "endDate",
          "type": "uint32"
        },
        {
          "internalType": "int32",
          "name": "voteCount",
          "type": "int32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposalNumber",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "upVote",
          "type": "bool"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x5e876063ff912f14c274c7fded3397d1d668ff9cfd39af08d3107f3a49ea2672",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1889528",
    "logsBloom": "0x
    "blockHash": "0x69aa9951a3fdbcb4f48ba8225c84bd706c12e3f1be8b29b79bf2f901ce01f27e",
    "transactionHash": "0x5e876063ff912f14c274c7fded3397d1d668ff9cfd39af08d3107f3a49ea2672",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1889528",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x6272616d00000000000000000000000000000000000000000000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "22c8687da67bd30e91ff22652cfc9042",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_name\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_name\",\"type\":\"bytes32\"},{\"internalType\":\"enum DAO.Role\",\"name\":\"_role\",\"type\":\"uint8\"}],\"name\":\"addMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"enum DAO.Duration\",\"name\":\"_duration\",\"type\":\"uint8\"}],\"name\":\"createProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"members\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"memberSince\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"startDate\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"endDate\",\"type\":\"uint32\"},{\"internalType\":\"int32\",\"name\":\"voteCount\",\"type\":\"int32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalNumber\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"upVote\",\"type\":\"bool\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Bram Mathijssen\",\"kind\":\"dev\",\"methods\":{},\"title\":\"DAO\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"My DAO\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DAO.sol\":\"DAO\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DAO.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nerror ParentContract__NotOwnerOfToken();\\r\\n\\r\\n/// @title DAO\\r\\n/// @author Bram Mathijssen\\r\\n/// @notice My DAO\\r\\ncontract DAO {\\r\\n    /* Type declarations */\\r\\n    enum Role {\\r\\n        USER,\\r\\n        ADMIN\\r\\n    }\\r\\n\\r\\n    enum Duration {\\r\\n        DAY,\\r\\n        WEEK,\\r\\n        MONTH\\r\\n    }\\r\\n\\r\\n    /* State Variables */\\r\\n    uint256 private proposalCount;\\r\\n    address private immutable i_owner;\\r\\n    bytes32 private constant USER = keccak256(abi.encodePacked(\\\"USER\\\"));\\r\\n    bytes32 private constant ADMIN = keccak256(abi.encodePacked(\\\"ADMIN\\\"));\\r\\n\\r\\n    mapping(address => Member) public members;\\r\\n    mapping(uint256 => Proposal) public proposals;\\r\\n\\r\\n    /* Structs */\\r\\n    struct Member {\\r\\n        bool valid; // checks if member has been initialised in mapping\\r\\n        bytes32 name;\\r\\n        uint256 memberSince;\\r\\n        mapping(bytes32 => bool) role; // mapping gives ability to hold multiple roles\\r\\n    }\\r\\n\\r\\n    struct Proposal {\\r\\n        bool valid;\\r\\n        bool active;\\r\\n        string description;\\r\\n        uint32 startDate;\\r\\n        uint32 endDate;\\r\\n        int32 voteCount;\\r\\n    }\\r\\n\\r\\n    /* Events */\\r\\n\\r\\n    /* Modifiers */\\r\\n    modifier hasRole(bytes32 _role) {\\r\\n        bool authorized;\\r\\n\\r\\n        if (_role == USER) {\\r\\n            members[msg.sender].role[ADMIN] || members[msg.sender].role[USER]\\r\\n                ? authorized = true\\r\\n                : authorized = false;\\r\\n        }\\r\\n        if (_role == ADMIN) {\\r\\n            members[msg.sender].role[ADMIN]\\r\\n                ? authorized = true\\r\\n                : authorized = false;\\r\\n        }\\r\\n\\r\\n        require(authorized == true, \\\"don't have correct role\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /* Constructor */\\r\\n    constructor(bytes32 _name) {\\r\\n        i_owner = msg.sender;\\r\\n\\r\\n        // load struct in storage before assigning values since we are using a mapping inside struct\\r\\n        Member storage member = members[msg.sender];\\r\\n        member.valid = true;\\r\\n        member.name = _name;\\r\\n        member.memberSince = block.timestamp;\\r\\n        member.role[ADMIN] = true;\\r\\n    }\\r\\n\\r\\n    /* Functions */\\r\\n    function addMember(\\r\\n        address _address,\\r\\n        bytes32 _name,\\r\\n        Role _role\\r\\n    ) external hasRole(ADMIN) {\\r\\n        require(_address != address(0), \\\"address can't be 0\\\");\\r\\n        require(_name != bytes32(0), \\\"name can't be 0\\\");\\r\\n        require(members[_address].valid == false, \\\"member already exists\\\");\\r\\n\\r\\n        Member storage member = members[_address];\\r\\n        member.valid = true;\\r\\n        member.name = _name;\\r\\n        member.memberSince = block.timestamp;\\r\\n        member.role[_getRole(_role)] = true;\\r\\n    }\\r\\n\\r\\n    // todo: remove member\\r\\n\\r\\n    function createProposal(\\r\\n        string memory _description,\\r\\n        Duration _duration\\r\\n    ) external hasRole(USER) {\\r\\n        require(bytes(_description).length > 10, \\\"need atleast 10 characters\\\");\\r\\n        proposalCount++;\\r\\n        proposals[proposalCount] = Proposal({\\r\\n            valid: true,\\r\\n            description: _description,\\r\\n            startDate: uint32(block.timestamp),\\r\\n            endDate: uint32(_getTimestampByDuration(_duration)),\\r\\n            active: true,\\r\\n            voteCount: 0\\r\\n        });\\r\\n    }\\r\\n\\r\\n    function vote(uint256 _proposalNumber, bool upVote) external hasRole(USER) {\\r\\n        Proposal storage proposal = proposals[_proposalNumber];\\r\\n        require(proposal.valid == true, \\\"proposal not valid\\\");\\r\\n        require(proposal.active == true, \\\"proposal not active\\\");\\r\\n        require(block.timestamp < proposal.endDate, \\\"proposal ended\\\");\\r\\n        require(\\r\\n            block.timestamp >= proposal.startDate,\\r\\n            \\\"proposal hasn't started\\\"\\r\\n        );\\r\\n        if (upVote) {\\r\\n            proposal.voteCount++;\\r\\n        } else {\\r\\n            proposals[_proposalNumber].voteCount--;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /* external Functions */\\r\\n    /* public Functions */\\r\\n    /* internal Functions */\\r\\n\\r\\n    /* private Functions */\\r\\n    function _getTimestampByDuration(\\r\\n        Duration _duration\\r\\n    ) private view returns (uint256) {\\r\\n        if (_duration == Duration.DAY) {\\r\\n            return block.timestamp + 1 days;\\r\\n        }\\r\\n        if (_duration == Duration.WEEK) {\\r\\n            return block.timestamp + 1 weeks;\\r\\n        }\\r\\n        if (_duration == Duration.MONTH) {\\r\\n            return block.timestamp + 4 weeks;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function _grantRole(\\r\\n        address _memberAddress,\\r\\n        Role _role\\r\\n    ) private hasRole(ADMIN) {\\r\\n        Member storage member = members[_memberAddress];\\r\\n        member.role[_getRole(_role)] = true;\\r\\n    }\\r\\n\\r\\n    function _getRole(Role _role) private pure returns (bytes32) {\\r\\n        if (_role == Role.USER) {\\r\\n            return USER;\\r\\n        }\\r\\n        if (_role == Role.ADMIN) {\\r\\n            return ADMIN;\\r\\n        }\\r\\n        return 0;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x8d571a876e66cf542c30356df31af11455a3ffe684fffecea07f5b5b6334ae04\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063013cf08b1461005c57806308ae4b0c14610091578063b6bd8396146100c3578063c9d27afe146100df578063d1c29a29146100fb575b600080fd5b61007660048036038101906100719190611173565b610117565b60405161008896959493929190611286565b60405180910390f35b6100ab60048036038101906100a6919061134c565b610222565b6040516100ba939291906113a1565b60405180910390f35b6100dd60048036038101906100d89190611429565b610259565b005b6100f960048036038101906100f491906114a8565b6106d9565b005b61011560048036038101906101109190611642565b610b8a565b005b60026020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900460ff1690806001018054610160906116cd565b80601f016020809104026020016040519081016040528092919081815260200182805461018c906116cd565b80156101d95780601f106101ae576101008083540402835291602001916101d9565b820191906000526020600020905b8154815290600101906020018083116101bc57829003601f168201915b5050505050908060020160009054906101000a900463ffffffff16908060020160049054906101000a900463ffffffff16908060020160089054906101000a900460030b905086565b60016020528060005260406000206000915090508060000160009054906101000a900460ff16908060010154908060020154905083565b60405160200161026890611755565b60405160208183030381529060405280519060200120600060405160200161028f906117b6565b6040516020818303038152906040528051906020012082036103d257600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006040516020016102fe90611755565b60405160208183030381529060405280519060200120815260200190815260200160002060009054906101000a900460ff16806103bc5750600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003016000604051602001610389906117b6565b60405160208183030381529060405280519060200120815260200190815260200160002060009054906101000a900460ff165b6103ca5760009050806103d0565b60019050805b505b6040516020016103e190611755565b60405160208183030381529060405280519060200120820361049857600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600060405160200161045090611755565b60405160208183030381529060405280519060200120815260200190815260200160002060009054906101000a900460ff16610490576000905080610496565b60019050805b505b60011515811515146104df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d690611817565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff160361054e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054590611883565b60405180910390fd5b6000801b8403610593576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058a906118ef565b60405180910390fd5b60001515600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16151514610629576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106209061195b565b60405180910390fd5b6000600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060018160000160006101000a81548160ff02191690831515021790555084816001018190555042816002018190555060018160030160006106ac87610fa1565b815260200190815260200160002060006101000a81548160ff021916908315150217905550505050505050565b6040516020016106e8906117b6565b60405160208183030381529060405280519060200120600060405160200161070f906117b6565b60405160208183030381529060405280519060200120820361085257600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600060405160200161077e90611755565b60405160208183030381529060405280519060200120815260200190815260200160002060009054906101000a900460ff168061083c5750600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003016000604051602001610809906117b6565b60405160208183030381529060405280519060200120815260200190815260200160002060009054906101000a900460ff165b61084a576000905080610850565b60019050805b505b60405160200161086190611755565b60405160208183030381529060405280519060200120820361091857600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006040516020016108d090611755565b60405160208183030381529060405280519060200120815260200190815260200160002060009054906101000a900460ff16610910576000905080610916565b60019050805b505b600115158115151461095f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095690611817565b60405180910390fd5b6000600260008681526020019081526020016000209050600115158160000160009054906101000a900460ff161515146109ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c5906119c7565b60405180910390fd5b600115158160000160019054906101000a900460ff16151514610a26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1d90611a33565b60405180910390fd5b8060020160049054906101000a900463ffffffff1663ffffffff164210610a82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7990611a9f565b60405180910390fd5b8060020160009054906101000a900463ffffffff1663ffffffff16421015610adf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad690611b0b565b60405180910390fd5b8315610b2d5780600201600881819054906101000a900460030b80929190610b0690611b5a565b91906101000a81548163ffffffff021916908360030b63ffffffff16021790555050610b83565b60026000868152602001908152602001600020600201600881819054906101000a900460030b80929190610b6090611b86565b91906101000a81548163ffffffff021916908360030b63ffffffff160217905550505b5050505050565b604051602001610b99906117b6565b604051602081830303815290604052805190602001206000604051602001610bc0906117b6565b604051602081830303815290604052805190602001208203610d0357600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003016000604051602001610c2f90611755565b60405160208183030381529060405280519060200120815260200190815260200160002060009054906101000a900460ff1680610ced5750600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003016000604051602001610cba906117b6565b60405160208183030381529060405280519060200120815260200190815260200160002060009054906101000a900460ff165b610cfb576000905080610d01565b60019050805b505b604051602001610d1290611755565b604051602081830303815290604052805190602001208203610dc957600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003016000604051602001610d8190611755565b60405160208183030381529060405280519060200120815260200190815260200160002060009054906101000a900460ff16610dc1576000905080610dc7565b60019050805b505b6001151581151514610e10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0790611817565b60405180910390fd5b600a845111610e54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4b90611c1a565b60405180910390fd5b600080815480929190610e6690611c3a565b91905055506040518060c001604052806001151581526020016001151581526020018581526020014263ffffffff168152602001610ea38561105d565b63ffffffff168152602001600060030b815250600260008054815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff0219169083151502179055506040820151816001019081610f1f9190611e2e565b5060608201518160020160006101000a81548163ffffffff021916908363ffffffff16021790555060808201518160020160046101000a81548163ffffffff021916908363ffffffff16021790555060a08201518160020160086101000a81548163ffffffff021916908360030b63ffffffff16021790555090505050505050565b6000806001811115610fb657610fb5611f00565b5b826001811115610fc957610fc8611f00565b5b03610ffa57604051602001610fdd906117b6565b604051602081830303815290604052805190602001209050611058565b60018081111561100d5761100c611f00565b5b8260018111156110205761101f611f00565b5b036110515760405160200161103490611755565b604051602081830303815290604052805190602001209050611058565b6000801b90505b919050565b600080600281111561107257611071611f00565b5b82600281111561108557611084611f00565b5b036110a05762015180426110999190611f2f565b9050611124565b600160028111156110b4576110b3611f00565b5b8260028111156110c7576110c6611f00565b5b036110e25762093a80426110db9190611f2f565b9050611124565b6002808111156110f5576110f4611f00565b5b82600281111561110857611107611f00565b5b03611123576224ea004261111c9190611f2f565b9050611124565b5b919050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6111508161113d565b811461115b57600080fd5b50565b60008135905061116d81611147565b92915050565b60006020828403121561118957611188611133565b5b60006111978482850161115e565b91505092915050565b60008115159050919050565b6111b5816111a0565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156111f55780820151818401526020810190506111da565b60008484015250505050565b6000601f19601f8301169050919050565b600061121d826111bb565b61122781856111c6565b93506112378185602086016111d7565b61124081611201565b840191505092915050565b600063ffffffff82169050919050565b6112648161124b565b82525050565b60008160030b9050919050565b6112808161126a565b82525050565b600060c08201905061129b60008301896111ac565b6112a860208301886111ac565b81810360408301526112ba8187611212565b90506112c9606083018661125b565b6112d6608083018561125b565b6112e360a0830184611277565b979650505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611319826112ee565b9050919050565b6113298161130e565b811461133457600080fd5b50565b60008135905061134681611320565b92915050565b60006020828403121561136257611361611133565b5b600061137084828501611337565b91505092915050565b6000819050919050565b61138c81611379565b82525050565b61139b8161113d565b82525050565b60006060820190506113b660008301866111ac565b6113c36020830185611383565b6113d06040830184611392565b949350505050565b6113e181611379565b81146113ec57600080fd5b50565b6000813590506113fe816113d8565b92915050565b6002811061141157600080fd5b50565b60008135905061142381611404565b92915050565b60008060006060848603121561144257611441611133565b5b600061145086828701611337565b9350506020611461868287016113ef565b925050604061147286828701611414565b9150509250925092565b611485816111a0565b811461149057600080fd5b50565b6000813590506114a28161147c565b92915050565b600080604083850312156114bf576114be611133565b5b60006114cd8582860161115e565b92505060206114de85828601611493565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61152a82611201565b810181811067ffffffffffffffff82111715611549576115486114f2565b5b80604052505050565b600061155c611129565b90506115688282611521565b919050565b600067ffffffffffffffff821115611588576115876114f2565b5b61159182611201565b9050602081019050919050565b82818337600083830152505050565b60006115c06115bb8461156d565b611552565b9050828152602081018484840111156115dc576115db6114ed565b5b6115e784828561159e565b509392505050565b600082601f830112611604576116036114e8565b5b81356116148482602086016115ad565b91505092915050565b6003811061162a57600080fd5b50565b60008135905061163c8161161d565b92915050565b6000806040838503121561165957611658611133565b5b600083013567ffffffffffffffff81111561167757611676611138565b5b611683858286016115ef565b92505060206116948582860161162d565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806116e557607f821691505b6020821081036116f8576116f761169e565b5b50919050565b600081905092915050565b7f41444d494e000000000000000000000000000000000000000000000000000000600082015250565b600061173f6005836116fe565b915061174a82611709565b600582019050919050565b600061176082611732565b9150819050919050565b7f5553455200000000000000000000000000000000000000000000000000000000600082015250565b60006117a06004836116fe565b91506117ab8261176a565b600482019050919050565b60006117c182611793565b9150819050919050565b7f646f6e2774206861766520636f727265637420726f6c65000000000000000000600082015250565b60006118016017836111c6565b915061180c826117cb565b602082019050919050565b60006020820190508181036000830152611830816117f4565b9050919050565b7f616464726573732063616e277420626520300000000000000000000000000000600082015250565b600061186d6012836111c6565b915061187882611837565b602082019050919050565b6000602082019050818103600083015261189c81611860565b9050919050565b7f6e616d652063616e277420626520300000000000000000000000000000000000600082015250565b60006118d9600f836111c6565b91506118e4826118a3565b602082019050919050565b60006020820190508181036000830152611908816118cc565b9050919050565b7f6d656d62657220616c7265616479206578697374730000000000000000000000600082015250565b60006119456015836111c6565b91506119508261190f565b602082019050919050565b6000602082019050818103600083015261197481611938565b9050919050565b7f70726f706f73616c206e6f742076616c69640000000000000000000000000000600082015250565b60006119b16012836111c6565b91506119bc8261197b565b602082019050919050565b600060208201905081810360008301526119e0816119a4565b9050919050565b7f70726f706f73616c206e6f742061637469766500000000000000000000000000600082015250565b6000611a1d6013836111c6565b9150611a28826119e7565b602082019050919050565b60006020820190508181036000830152611a4c81611a10565b9050919050565b7f70726f706f73616c20656e646564000000000000000000000000000000000000600082015250565b6000611a89600e836111c6565b9150611a9482611a53565b602082019050919050565b60006020820190508181036000830152611ab881611a7c565b9050919050565b7f70726f706f73616c206861736e27742073746172746564000000000000000000600082015250565b6000611af56017836111c6565b9150611b0082611abf565b602082019050919050565b60006020820190508181036000830152611b2481611ae8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611b658261126a565b9150637fffffff8203611b7b57611b7a611b2b565b5b600182019050919050565b6000611b918261126a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000008203611bc357611bc2611b2b565b5b600182039050919050565b7f6e6565642061746c656173742031302063686172616374657273000000000000600082015250565b6000611c04601a836111c6565b9150611c0f82611bce565b602082019050919050565b60006020820190508181036000830152611c3381611bf7565b9050919050565b6000611c458261113d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611c7757611c76611b2b565b5b600182019050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611ce47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611ca7565b611cee8683611ca7565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611d2b611d26611d218461113d565b611d06565b61113d565b9050919050565b6000819050919050565b611d4583611d10565b611d59611d5182611d32565b848454611cb4565b825550505050565b600090565b611d6e611d61565b611d79818484611d3c565b505050565b5b81811015611d9d57611d92600082611d66565b600181019050611d7f565b5050565b601f821115611de257611db381611c82565b611dbc84611c97565b81016020851015611dcb578190505b611ddf611dd785611c97565b830182611d7e565b50505b505050565b600082821c905092915050565b6000611e0560001984600802611de7565b1980831691505092915050565b6000611e1e8383611df4565b9150826002028217905092915050565b611e37826111bb565b67ffffffffffffffff811115611e5057611e4f6114f2565b5b611e5a82546116cd565b611e65828285611da1565b600060209050601f831160018114611e985760008415611e86578287015190505b611e908582611e12565b865550611ef8565b601f198416611ea686611c82565b60005b82811015611ece57848901518255600182019150602085019450602081019050611ea9565b86831015611eeb5784890151611ee7601f891682611df4565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000611f3a8261113d565b9150611f458361113d565b9250828201905080821115611f5d57611f5c611b2b565b5b9291505056fea264697066735822122016e539d807af225c2715dfc1fa85aefccfdeaf826d8266d51ceb34e1af422ef064736f6c63430008110033",
  "devdoc": {
    "author": "Bram Mathijssen",
    "kind": "dev",
    "methods": {},
    "title": "DAO",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "My DAO",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 13,
        "contract": "contracts/DAO.sol:DAO",
        "label": "proposalCount",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 36,
        "contract": "contracts/DAO.sol:DAO",
        "label": "members",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(Member)52_storage)"
      },
      {
        "astId": 41,
        "contract": "contracts/DAO.sol:DAO",
        "label": "proposals",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_struct(Proposal)65_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_int32": {
        "encoding": "inplace",
        "label": "int32",
        "numberOfBytes": "4"
      },
      "t_mapping(t_address,t_struct(Member)52_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct DAO.Member)",
        "numberOfBytes": "32",
        "value": "t_struct(Member)52_storage"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(Proposal)65_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct DAO.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)65_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Member)52_storage": {
        "encoding": "inplace",
        "label": "struct DAO.Member",
        "members": [
          {
            "astId": 43,
            "contract": "contracts/DAO.sol:DAO",
            "label": "valid",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 45,
            "contract": "contracts/DAO.sol:DAO",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          },
          {
            "astId": 47,
            "contract": "contracts/DAO.sol:DAO",
            "label": "memberSince",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 51,
            "contract": "contracts/DAO.sol:DAO",
            "label": "role",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_bytes32,t_bool)"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(Proposal)65_storage": {
        "encoding": "inplace",
        "label": "struct DAO.Proposal",
        "members": [
          {
            "astId": 54,
            "contract": "contracts/DAO.sol:DAO",
            "label": "valid",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 56,
            "contract": "contracts/DAO.sol:DAO",
            "label": "active",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 58,
            "contract": "contracts/DAO.sol:DAO",
            "label": "description",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 60,
            "contract": "contracts/DAO.sol:DAO",
            "label": "startDate",
            "offset": 0,
            "slot": "2",
            "type": "t_uint32"
          },
          {
            "astId": 62,
            "contract": "contracts/DAO.sol:DAO",
            "label": "endDate",
            "offset": 4,
            "slot": "2",
            "type": "t_uint32"
          },
          {
            "astId": 64,
            "contract": "contracts/DAO.sol:DAO",
            "label": "voteCount",
            "offset": 8,
            "slot": "2",
            "type": "t_int32"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}